module Stave
  module Core
    class Lookup
      attr_reader name: Symbol

      def initialize: (Symbol) -> void

      def value: -> untyped

      def self.variant: (untyped, **untyped) -> void

      def self.variant?: (Symbol) -> bool

      def self.variants: -> Array[Variant]

      self.@variants: Array[Variant]

      private

      attr_reader variant: Variant

      class Variant
        attr_reader name: Symbol
        attr_reader attributes: Hash[Symbol, untyped]

        def initialize: (name: Symbol, **untyped) -> void
      end

      class InvalidVariantError < StandardError
        def initialize: (Symbol) -> void
      end

      def validate_variant!: -> void

      # Internal
      def new: (Symbol) -> Lookup
    end
  end
end
